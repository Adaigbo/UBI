{"version":3,"file":"static/js/863.1effabf2.chunk.js","mappings":"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","sources":["components/Custom/CustomDatepicker.js","services/NotificationServices.js","components/Custom/Editor.js","components/Pages/NotificationList/NotificationPopUp.js","components/Pages/NotificationList/NotificationList.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nexport const CustomDatePicker = (prop) => {\r\n    const [defaultDate, setDefaultDate] = useState(null);\r\n\r\n    useEffect(() => {\r\n        if (prop.Date) {\r\n            setDefaultDate(new Date(prop.Date));\r\n        }\r\n    }, []);\r\n\r\n    const getYear = (date) => {\r\n        return date.getFullYear();\r\n    };\r\n    const getMonth = (date) => {\r\n        return date.getMonth();\r\n    };\r\n    const range = (start, end, step) => {\r\n        const rangeArray = [];\r\n        for (let i = start; i <= end; i += step) {\r\n            rangeArray.push(i);\r\n        }\r\n        return rangeArray;\r\n    };\r\n    const years = range(1900, getYear(new Date()) + 1, 1);\r\n    const months = [\r\n        \"January\",\r\n        \"February\",\r\n        \"March\",\r\n        \"April\",\r\n        \"May\",\r\n        \"June\",\r\n        \"July\",\r\n        \"August\",\r\n        \"September\",\r\n        \"October\",\r\n        \"November\",\r\n        \"December\",\r\n    ];\r\n\r\n    return (\r\n        <DatePicker\r\n            className={prop.className}\r\n            name={prop.name}\r\n            autoComplete={prop.autoComplete}\r\n            placeholderText={prop.placeholder}\r\n            renderCustomHeader={({\r\n                date,\r\n                changeYear,\r\n                changeMonth,\r\n            }) => (\r\n                <div className=\"m-2 d-flex justify-content-center\">\r\n                    <select className=\"me-2 px-2 form-select-lg border-rounded border-primary\"\r\n                        value={getYear(date)}\r\n                        onChange={({ target: { value } }) => changeYear(value)}\r\n                    >\r\n                        {years.map((option) => (\r\n                            <option key={option} value={option} className=\"my-2 py-2\">\r\n                                {option}\r\n                            </option>\r\n                        ))}\r\n                    </select>\r\n\r\n                    <select className=\"ms-2 px-2 form-select-lg border-primary\"\r\n                        value={months[getMonth(date)]}\r\n                        onChange={({ target: { value } }) =>\r\n                            changeMonth(months.indexOf(value))\r\n                        }\r\n                    >\r\n                        {months.map((option) => (\r\n                            <option key={option} value={option}>\r\n                                {<div className=\"p-2 font-weight-bold\">{option}</div>}\r\n                            </option>\r\n                        ))}\r\n                    </select>\r\n                </div>\r\n            )}\r\n            selected={defaultDate}\r\n            onChange={(date) => setDefaultDate(date)}\r\n            maxDate={prop.maxdate}\r\n        />\r\n    );\r\n};\r\n\r\nCustomDatePicker.defaultProps = {\r\n    className: \"\", // Default value for className prop\r\n    autoComplete: \"off\", // Default value for autoComplete prop\r\n    placeholder: '',\r\n};\r\n\r\nCustomDatePicker.propTypes = {\r\n    name : PropTypes.string.isRequired,\r\n}","import requests from \"./httpService\";\r\n\r\nconst NotificationServices = {\r\n    get(id, params) {\r\n        id = id ? id : '';\r\n        return requests.get(`/announcement/${id}`, { params });\r\n    },\r\n    insert(body) {\r\n        return requests.post(`/announcement`, body);\r\n    },\r\n    update(id, body) {\r\n        return requests.put(`/announcement/${id}`, body);\r\n    },\r\n    delete(id) {\r\n        return requests.delete(`/announcement/${id}`);\r\n    },\r\n}\r\n\r\nexport default NotificationServices;","import React, { useEffect, useState } from \"react\";\r\nimport { useQuill } from \"react-quilljs\";\r\n\r\nexport function Editor({ id, name, value, setQuill }) {\r\n    const modules = {\r\n        toolbar: [\r\n            ['bold', 'italic', 'underline', 'strike'],\r\n            [{ align: [] }],\r\n\r\n            [{ list: 'ordered' }, { list: 'bullet' }],\r\n            [{ indent: '-1' }, { indent: '+1' }],\r\n\r\n            [{ size: ['small', false, 'large', 'huge'] }],\r\n            [{ header: [1, 2, 3, 4, 5, 6, false] }],\r\n            ['link'/*, 'image', 'video'*/],\r\n            [{ color: [] }, { background: [] }],\r\n\r\n            ['clean'],\r\n        ],\r\n        clipboard: {\r\n            matchVisual: false,\r\n        },\r\n    };\r\n    const { quill, quillRef } = useQuill({ modules });\r\n    const [quillValue, setQuillValue] = useState('');\r\n\r\n\r\n    useEffect(() => {\r\n        if (quill) {\r\n            if (setQuill) setQuill(quill);\r\n            value = value ? value.replaceAll(\"\\n\", \"\").replaceAll(\"\\r\", \"\") : '';\r\n            if (value) {\r\n                quill.pasteHTML(value);\r\n                setQuillValue(value);\r\n            }\r\n        }\r\n\r\n        if (quill) {\r\n            quill.on('text-change', (delta, oldDelta, source) => {\r\n                setQuillValue(quill.root.innerHTML);\r\n                // console.log('Text change!');\r\n                // console.log(quill.getText()); // Get text only\r\n                // console.log(quill.getContents()); // Get delta contents\r\n                // console.log(quill.root.innerHTML); // Get innerHTML using quill\r\n                // console.log(quillRef.current.firstChild.innerHTML); // Get innerHTML using quillRef\r\n            });\r\n        }\r\n    }, [quill, value]);\r\n\r\n\r\n    return (\r\n        <div>\r\n            <div>\r\n                <div style={{ height: \"90%\" }} ref={quillRef} />\r\n            </div>\r\n            <textarea name={name} defaultValue={quillValue} className=\"d-none\" id={id}></textarea>\r\n\r\n            {/* <div className=\"ql-editor\" dangerouslySetInnerHTML={{ __html: quillValue }}></div> */}\r\n        </div>\r\n    );\r\n}","import React, { Fragment, useEffect, useState } from \"react\";\r\nimport { Button, Form, Modal } from \"react-bootstrap\";\r\nimport Select from \"react-select\";\r\nimport makeAnimated from \"react-select/animated\";\r\nimport Utils from \"../../../utils/Utils\";\r\nimport NotificationServices from './../../../services/NotificationServices';\r\nimport { CustomDatePicker as DatePicker } from \"../../../components/Custom/CustomDatepicker\";\r\nimport { Editor } from \"./../../Custom/Editor\";\r\n// D:\\TargetX\\react.corprisk\\crm\\src\\components\\Custom\\Editor.js\r\n\r\n\r\nconst NotificationPopup = ({ showModal, setShowModal, id }) => {\r\n    const [notification, setNotification] = useState({});\r\n\r\n\r\n    const [showPhotoModal, setShowPhotoModal] = useState(false);\r\n    const [photo, setPhoto] = useState('');\r\n\r\n    const [showSignatureModal, setShowSignatureModal] = useState(true);\r\n    const [signature, setSignature] = useState('');\r\n\r\n    const [disabled, setDisabled] = useState(false);\r\n    const [loading, setLoading] = useState(true);\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        setShowPhotoModal(false);\r\n        setShowSignatureModal(false);\r\n\r\n        if (showModal) {\r\n            setLoading(true);\r\n\r\n            if (id) {\r\n                NotificationServices.get(id).then((result) => {\r\n                    setNotification(result.data);\r\n\r\n                    setLoading(false);\r\n                });\r\n            }\r\n            else {\r\n                setNotification({});\r\n\r\n                setLoading(false);\r\n            }\r\n\r\n            /* reset */\r\n            setPhoto('');\r\n            setSignature('');\r\n        }\r\n\r\n    }, [showModal, id]);\r\n\r\n\r\n    const handleSubmit = async (event) => {\r\n        event.preventDefault();\r\n        setDisabled(true);\r\n\r\n        try {\r\n            const formData = new FormData(event.target);\r\n            const jsonObject = Utils.formDataToJSON(formData);\r\n\r\n            if (id) { // update\r\n                let row = await NotificationServices.update(id, jsonObject);\r\n            }\r\n            else { //insert\r\n                let row = await NotificationServices.insert(jsonObject);\r\n            }\r\n\r\n            Utils.Toast('success', 'Product Saved Successfully!');\r\n            setShowModal(false);\r\n        }\r\n        catch (error) {\r\n            console.log(error);\r\n        }\r\n\r\n        setDisabled(false);\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <Modal show={showModal} onHide={() => setShowModal(false)} size=\"lg\" container={() => document.querySelector('#root')} id=\"saveuserContainer\" backdrop=\"static\">\r\n                <Modal.Header closeButton={false}>\r\n                    <Modal.Title>{id ? 'Update' : 'Add'} Notification</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n\r\n                    {loading &&\r\n                        <div className=\"text-center\">\r\n                            <div className=\"lds-ripple\">\r\n                                <div></div>\r\n                                <div></div>\r\n                            </div>\r\n                        </div>\r\n                    }\r\n                    {!loading &&\r\n\r\n                        <form id=\"saveuser\" name=\"saveuser\" method=\"post\" onSubmit={handleSubmit} className=\"d-flex flex-column needs-validation was-validated\">\r\n\r\n                            <div className=\"form-group\">\r\n                                <p className=\"mg-b-10\">Notification Title</p>\r\n                                <Form.Group className=\" has-success mg-b-0\">\r\n                                    <Form.Control placeholder=\"Enter the Notification Title\" required type=\"text\" name=\"title\" defaultValue={notification.title} />\r\n                                </Form.Group>\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <p className=\"mg-b-10\">Description</p>\r\n                                <Editor name=\"announcement\" required value={notification.announcement} />\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <p className=\"mg-b-10\">Expiry Day</p>\r\n                                <DatePicker Date={notification.valid_till} className={\"form-control\"} required placeholder={\"Enter Expiry Date\"} name={\"valid_till\"} />\r\n                            </div>\r\n                        </form>\r\n                    }\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button\r\n                        disabled={disabled}\r\n                        variant=\"primary\"\r\n                        type=\"submit\"\r\n                        form=\"saveuser\"\r\n                        className=\"text-center\">\r\n                        Save\r\n                    </Button>\r\n                    <Button\r\n                        variant=\"danger\"\r\n                        onClick={() => {\r\n                            setShowModal(false);\r\n                        }}\r\n                        className=\"text-center\">\r\n                        Close\r\n                    </Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nNotificationPopup.propTypes = {};\r\n\r\nNotificationPopup.defaultProps = {};\r\n\r\nexport default NotificationPopup;\r\n","import React, { Fragment, useEffect, useState } from 'react';\r\nimport { Breadcrumb, Button } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport NotificationServices from '../../../services/NotificationServices';\r\nimport Utils from './../../../utils/Utils';\r\nimport NotificationPopup from './NotificationPopUp';\r\n\r\nconst NotificationList = () => {\r\n\r\n  const [data, setData] = useState([]);\r\n  const [showModal, setShowModal] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const fetch = async () => {\r\n      if (Utils.can('View Announcement')) {\r\n        var notifications = await NotificationServices.get();\r\n        setData(notifications.data);\r\n        console.log(notifications.data);\r\n      }\r\n    }\r\n\r\n    fetch()\r\n  }, []);\r\n\r\n  return (\r\n    <Fragment>\r\n      <div className=\"page-header\">\r\n        <div>\r\n          <h2 className=\"main-content-title tx-24 mg-b-5\">Notifications</h2>\r\n          <Breadcrumb>\r\n            <Breadcrumb.Item active > Notification List  </Breadcrumb.Item>\r\n          </Breadcrumb>\r\n        </div>\r\n        {Utils.can('Insert Announcement') &&\r\n          <div className=\"d-flex\">\r\n            <div className=\"justify-content-center\">\r\n              <Button\r\n                variant=\"primary\"\r\n                type=\"button\"\r\n                onClick={() => setShowModal(true)}\r\n                className=\"my-2 btn-icon-text\"\r\n              >\r\n                + Add Notification\r\n              </Button>\r\n            </div>\r\n          </div>\r\n        }\r\n        <NotificationPopup showModal={showModal} setShowModal={setShowModal} id={null} />\r\n      </div>\r\n\r\n      <div className=\"container\">\r\n        <ul className=\"notification\">\r\n\r\n          {data.map((not, index) => (\r\n            <React.Fragment key={index}>\r\n\r\n              <li>\r\n                <div className=\"notification-time\">\r\n                  <span className=\"date\">{new Date(not.created_at).toLocaleString('en-US', { month: 'short', day: 'numeric' })}</span>\r\n                  <span className=\"time\">{new Date(not.created_at).toLocaleTimeString('en-US', { hour: '2-digit', minute: '2-digit' })}</span>\r\n                </div>\r\n                <div className=\"notification-icon\">\r\n                  <Link to=\"#\"></Link>\r\n                </div>\r\n                <div className=\"notification-body\">\r\n                  <div className=\"media mt-0\">\r\n                    <div className=\"main-avatar avatar-md online\">\r\n                      <img\r\n                        alt=\"avatar\"\r\n                        className=\"rounded-6\"\r\n                        src={require(\"../../../assets/img/users/1.jpg\")}\r\n                      />\r\n                    </div>\r\n                    <div className=\"media-body ms-3 d-flex\">\r\n                      <div className=\"\">\r\n                        <p className=\"tx-14 text-dark mb-0 tx-semibold\">\r\n                          {not.title}\r\n                        </p>\r\n                        <p className=\"mb-0 tx-13 text-muted\">\r\n                          <p className=\"mb-0 tx-13 text-muted\">{not.announcement.replace(/<[^>]+>/g, '')}</p>\r\n                        </p>\r\n                      </div>\r\n                      <div className=\"notify-time\">\r\n                        <p className=\"mb-0 text-muted tx-11\">\r\n                          {(() => {\r\n                            const timeDifference = new Date() - new Date(not.created_at);\r\n                            const seconds = Math.floor(timeDifference / 1000);\r\n                            const minutes = Math.floor(seconds / 60);\r\n                            const hours = Math.floor(minutes / 60);\r\n                            const days = Math.floor(hours / 24);\r\n                            const months = Math.floor(days / 30);\r\n                            const years = Math.floor(months / 12);\r\n                            return years > 0 ? `${years} year${years !== 1 ? 's' : ''} ago` : months > 0 ? `${months} month${months !== 1 ? 's' : ''} ago` : days > 0 ? `${days} day${days !== 1 ? 's' : ''} ago` : hours > 0 ? `${hours} hour${hours !== 1 ? 's' : ''} ago` : minutes > 0 ? `${minutes} minute${minutes !== 1 ? 's' : ''} ago` : `${seconds} second${seconds !== 1 ? 's' : ''} ago`;\r\n                          })()}\r\n                        </p>\r\n\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </li>\r\n            </React.Fragment>\r\n          ))}\r\n\r\n        </ul>\r\n        <div className=\"text-center mb-4\">\r\n          <Button className=\"btn ripple btn-primary w-md\" onClick={() => window.location.reload()}>\r\n            Reload\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    </Fragment>\r\n  )\r\n}; NotificationList.propTypes = {};\r\n\r\nNotificationList.defaultProps = {};\r\n\r\nexport default NotificationList;"],"names":["CustomDatePicker","prop","_useState","useState","_useState2","_slicedToArray","defaultDate","setDefaultDate","useEffect","Date","getYear","date","getFullYear","getMonth","years","start","end","step","rangeArray","i","push","range","months","_jsx","DatePicker","className","name","autoComplete","placeholderText","placeholder","renderCustomHeader","_ref","changeYear","changeMonth","_jsxs","children","value","onChange","_ref2","target","map","option","_ref3","indexOf","selected","maxDate","maxdate","defaultProps","get","id","params","requests","concat","insert","body","update","delete","Editor","setQuill","_useQuill","useQuill","modules","toolbar","align","list","indent","size","header","color","background","clipboard","matchVisual","quill","quillRef","quillValue","setQuillValue","replaceAll","pasteHTML","on","delta","oldDelta","source","root","innerHTML","style","height","ref","defaultValue","NotificationPopup","showModal","setShowModal","notification","setNotification","_useState3","_useState4","setShowPhotoModal","_useState5","_useState6","setPhoto","_useState7","_useState8","setShowSignatureModal","_useState9","_useState10","setSignature","_useState11","_useState12","disabled","setDisabled","_useState13","_useState14","loading","setLoading","NotificationServices","then","result","data","handleSubmit","_asyncToGenerator","_regeneratorRuntime","mark","_callee","event","formData","jsonObject","wrap","_context","prev","next","preventDefault","FormData","Utils","sent","t0","console","log","stop","_x","apply","arguments","Fragment","Modal","show","onHide","container","document","querySelector","backdrop","closeButton","method","onSubmit","Form","required","type","title","announcement","valid_till","Button","variant","form","onClick","NotificationList","setData","fetch","notifications","Breadcrumb","active","not","index","React","created_at","toLocaleString","month","day","toLocaleTimeString","hour","minute","Link","to","alt","src","require","replace","timeDifference","seconds","Math","floor","minutes","hours","days","window","location","reload"],"sourceRoot":""}